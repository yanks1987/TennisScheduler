{"ast":null,"code":"var _jsxFileName = \"/Users/priyankashah/code/tennis-scheduler/src/components/PlayerList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerList = () => {\n  _s();\n  // Initialize the state with a hardcoded list of players\n  const [players, setPlayers] = useState([{\n    name: 'Alice',\n    phoneNumber: '123-456-7890'\n  }, {\n    name: 'Bob',\n    phoneNumber: '234-567-8901'\n  }, {\n    name: 'Charlie',\n    phoneNumber: '345-678-9012'\n  }]);\n\n  // State to hold the input values for a new player\n  const [newPlayer, setNewPlayer] = useState({\n    name: '',\n    phoneNumber: ''\n  });\n\n  // Handle input changes for the new player's name and phone number\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewPlayer(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Add a new player to the list\n  const addPlayer = () => {\n    if (newPlayer.name && newPlayer.phoneNumber) {\n      setPlayers(prevPlayers => [...prevPlayers, newPlayer]);\n      setNewPlayer({\n        name: '',\n        phoneNumber: ''\n      }); // Reset input fields\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Player List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [player.name, \" - \", player.phoneNumber]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Enter player's name\",\n        value: newPlayer.name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"phoneNumber\",\n        placeholder: \"Enter player's phone number\",\n        value: newPlayer.phoneNumber,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPlayer,\n        children: \"Add Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(PlayerList, \"XzW9LRoZ+IntrJiimLprOP+FN0E=\");\n_c = PlayerList;\nexport default PlayerList;\nvar _c;\n$RefreshReg$(_c, \"PlayerList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PlayerList","_s","players","setPlayers","name","phoneNumber","newPlayer","setNewPlayer","handleInputChange","e","value","target","prev","addPlayer","prevPlayers","children","fileName","_jsxFileName","lineNumber","columnNumber","map","player","index","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/priyankashah/code/tennis-scheduler/src/components/PlayerList.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst PlayerList = () => {\n    // Initialize the state with a hardcoded list of players\n    const [players, setPlayers] = useState([\n        { name: 'Alice', phoneNumber: '123-456-7890' },\n        { name: 'Bob', phoneNumber: '234-567-8901' },\n        { name: 'Charlie', phoneNumber: '345-678-9012' },\n    ]);\n\n    // State to hold the input values for a new player\n    const [newPlayer, setNewPlayer] = useState({ name: '', phoneNumber: '' });\n\n    // Handle input changes for the new player's name and phone number\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setNewPlayer((prev) => ({\n            ...prev,\n            [name]: value,\n        }));\n    };\n\n    // Add a new player to the list\n    const addPlayer = () => {\n        if (newPlayer.name && newPlayer.phoneNumber) {\n            setPlayers((prevPlayers) => [...prevPlayers, newPlayer]);\n            setNewPlayer({ name: '', phoneNumber: '' }); // Reset input fields\n        }\n    };\n\n    return (\n        <div>\n            <h2>Player List</h2>\n            <ul>\n                {players.map((player, index) => (\n                    <li key={index}>\n                        {player.name} - {player.phoneNumber}\n                    </li>\n                ))}\n            </ul>\n            <div>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter player's name\"\n                    value={newPlayer.name}\n                    onChange={handleInputChange}\n                />\n                <input\n                    type=\"text\"\n                    name=\"phoneNumber\"\n                    placeholder=\"Enter player's phone number\"\n                    value={newPlayer.phoneNumber}\n                    onChange={handleInputChange}\n                />\n                <button onClick={addPlayer}>Add Player</button>\n            </div>\n        </div>\n    );\n};\n\nexport default PlayerList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}